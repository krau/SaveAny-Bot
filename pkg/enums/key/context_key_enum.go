// Code generated by go-enum DO NOT EDIT.
// Version: 0.6.1
// Revision: a6f63bddde05aca4221df9c8e9e6d7d9674b1cb4
// Build Date: 2025-03-18T23:42:14Z
// Built By: goreleaser

package key

import (
	"fmt"
	"strings"
)

const (
	// ContextKeyContentLength is a ContextKey of type content-length.
	ContextKeyContentLength ContextKey = "content-length"
)

var ErrInvalidContextKey = fmt.Errorf("not a valid ContextKey, try [%s]", strings.Join(_ContextKeyNames, ", "))

var _ContextKeyNames = []string{
	string(ContextKeyContentLength),
}

// ContextKeyNames returns a list of possible string values of ContextKey.
func ContextKeyNames() []string {
	tmp := make([]string, len(_ContextKeyNames))
	copy(tmp, _ContextKeyNames)
	return tmp
}

// ContextKeyValues returns a list of the values for ContextKey
func ContextKeyValues() []ContextKey {
	return []ContextKey{
		ContextKeyContentLength,
	}
}

// String implements the Stringer interface.
func (x ContextKey) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ContextKey) IsValid() bool {
	_, err := ParseContextKey(string(x))
	return err == nil
}

var _ContextKeyValue = map[string]ContextKey{
	"content-length": ContextKeyContentLength,
}

// ParseContextKey attempts to convert a string to a ContextKey.
func ParseContextKey(name string) (ContextKey, error) {
	if x, ok := _ContextKeyValue[name]; ok {
		return x, nil
	}
	// Case insensitive parse, do a separate lookup to prevent unnecessary cost of lowercasing a string if we don't need to.
	if x, ok := _ContextKeyValue[strings.ToLower(name)]; ok {
		return x, nil
	}
	return ContextKey(""), fmt.Errorf("%s is %w", name, ErrInvalidContextKey)
}

// Set implements the Golang flag.Value interface func.
func (x *ContextKey) Set(val string) error {
	v, err := ParseContextKey(val)
	*x = v
	return err
}

// Get implements the Golang flag.Getter interface func.
func (x *ContextKey) Get() interface{} {
	return *x
}

// Type implements the github.com/spf13/pFlag Value interface.
func (x *ContextKey) Type() string {
	return "ContextKey"
}
